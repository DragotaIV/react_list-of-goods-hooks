{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","reset","setReset","visibleGoods","goods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BL,oBAAS,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAEMC,EAlCD,SACLC,EACAL,EACAH,GAGA,IAAMO,EAAY,YAAOC,GAoBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKP,EAASgB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITf,GACFO,EAAaS,UAGRT,EAQcU,CAAkBpB,EAAiBM,EAAUH,GAElE,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,YAAa,CAC3C,aAAcjB,IAAaP,EAASgB,WAEtCS,QAAS,WACPjB,EAAYR,EAASgB,UACrBN,GAAS,IAPb,iCAaA,wBACEa,KAAK,SACLD,UAAWE,IAAW,SAAU,eAAgB,CAC9C,aAAcjB,IAAaP,EAASkB,SAEtCO,QAAS,WACPjB,EAAYR,EAASkB,QACrBR,GAAS,IAPb,4BAaA,wBACEa,KAAK,SACLD,UAAWE,IAAW,SAAU,eAAgB,CAC9C,cAA6B,IAAfpB,IAEhBqB,QAAS,WACPpB,GAAeD,GACfM,GAAS,IAPb,qBAaCD,GACC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPpB,GAAc,GACdG,EAAYR,EAASM,MACrBI,GAAS,IANb,sBAcJ,6BACGC,EAAae,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCtHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.152aa9a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [reset, setReset] = useState(false);\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is - info', {\n            'is - light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => {\n            setSortType(SortType.ALPHABET);\n            setReset(true);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is - success', {\n            'is - light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n            setReset(true);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is - warning', {\n            'is - light': isReversed !== true,\n          })}\n          onClick={() => {\n            setIsReversed(!isReversed);\n            setReset(true);\n          }}\n        >\n          Reverse\n        </button>\n\n        {reset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setSortType(SortType.NONE);\n              setReset(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}